// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tech.proto

#include "tech.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tech_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tech_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LayerPurpose;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tech_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Package;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tech_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LayerInfo;
}  // namespace protobuf_tech_2eproto
namespace vlsir {
namespace tech {
class TechnologyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Technology>
      _instance;
} _Technology_default_instance_;
class PackageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Package>
      _instance;
} _Package_default_instance_;
class LayerPurposeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LayerPurpose>
      _instance;
} _LayerPurpose_default_instance_;
class LayerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LayerInfo>
      _instance;
} _LayerInfo_default_instance_;
}  // namespace tech
}  // namespace vlsir
namespace protobuf_tech_2eproto {
static void InitDefaultsTechnology() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vlsir::tech::_Technology_default_instance_;
    new (ptr) ::vlsir::tech::Technology();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vlsir::tech::Technology::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Technology =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTechnology}, {
      &protobuf_tech_2eproto::scc_info_Package.base,
      &protobuf_tech_2eproto::scc_info_LayerInfo.base,}};

static void InitDefaultsPackage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vlsir::tech::_Package_default_instance_;
    new (ptr) ::vlsir::tech::Package();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vlsir::tech::Package::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Package =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPackage}, {}};

static void InitDefaultsLayerPurpose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vlsir::tech::_LayerPurpose_default_instance_;
    new (ptr) ::vlsir::tech::LayerPurpose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vlsir::tech::LayerPurpose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LayerPurpose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLayerPurpose}, {}};

static void InitDefaultsLayerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vlsir::tech::_LayerInfo_default_instance_;
    new (ptr) ::vlsir::tech::LayerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vlsir::tech::LayerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LayerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLayerInfo}, {
      &protobuf_tech_2eproto::scc_info_LayerPurpose.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Technology.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Package.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LayerPurpose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LayerInfo.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::Technology, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::Technology, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::Technology, packages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::Technology, layers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::Package, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::Package, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerPurpose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerPurpose, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerPurpose, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerInfo, purpose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerInfo, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vlsir::tech::LayerInfo, sub_index_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::vlsir::tech::Technology)},
  { 8, -1, sizeof(::vlsir::tech::Package)},
  { 14, -1, sizeof(::vlsir::tech::LayerPurpose)},
  { 21, -1, sizeof(::vlsir::tech::LayerInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::vlsir::tech::_Technology_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vlsir::tech::_Package_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vlsir::tech::_LayerPurpose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vlsir::tech::_LayerInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tech.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ntech.proto\022\nvlsir.tech\"h\n\nTechnology\022\014"
      "\n\004name\030\001 \001(\t\022%\n\010packages\030\013 \003(\0132\023.vlsir.t"
      "ech.Package\022%\n\006layers\030e \003(\0132\025.vlsir.tech"
      ".LayerInfo\"\027\n\007Package\022\014\n\004name\030\001 \001(\t\"O\n\014L"
      "ayerPurpose\022\023\n\013description\030\001 \001(\t\022*\n\004type"
      "\030\002 \001(\0162\034.vlsir.tech.LayerPurposeType\"f\n\t"
      "LayerInfo\022\014\n\004name\030\001 \001(\t\022)\n\007purpose\030\013 \001(\013"
      "2\030.vlsir.tech.LayerPurpose\022\r\n\005index\030\025 \001("
      "\004\022\021\n\tsub_index\030\037 \001(\004*^\n\020LayerPurposeType"
      "\022\013\n\007UNKNOWN\020\000\022\t\n\005LABEL\020\001\022\013\n\007DRAWING\020\002\022\007\n"
      "\003PIN\020\003\022\017\n\013OBSTRUCTION\020\004\022\013\n\007OUTLINE\020\005b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 444);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tech.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tech_2eproto
namespace vlsir {
namespace tech {
const ::google::protobuf::EnumDescriptor* LayerPurposeType_descriptor() {
  protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tech_2eproto::file_level_enum_descriptors[0];
}
bool LayerPurposeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Technology::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Technology::kNameFieldNumber;
const int Technology::kPackagesFieldNumber;
const int Technology::kLayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Technology::Technology()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tech_2eproto::scc_info_Technology.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vlsir.tech.Technology)
}
Technology::Technology(const Technology& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      packages_(from.packages_),
      layers_(from.layers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:vlsir.tech.Technology)
}

void Technology::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Technology::~Technology() {
  // @@protoc_insertion_point(destructor:vlsir.tech.Technology)
  SharedDtor();
}

void Technology::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Technology::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Technology::descriptor() {
  ::protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Technology& Technology::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tech_2eproto::scc_info_Technology.base);
  return *internal_default_instance();
}


void Technology::Clear() {
// @@protoc_insertion_point(message_clear_start:vlsir.tech.Technology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  layers_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Technology::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vlsir.tech.Technology)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vlsir.tech.Technology.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vlsir.tech.Package packages = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vlsir.tech.LayerInfo layers = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_layers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vlsir.tech.Technology)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vlsir.tech.Technology)
  return false;
#undef DO_
}

void Technology::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vlsir.tech.Technology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.Technology.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .vlsir.tech.Package packages = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->packages(static_cast<int>(i)),
      output);
  }

  // repeated .vlsir.tech.LayerInfo layers = 101;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101,
      this->layers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vlsir.tech.Technology)
}

::google::protobuf::uint8* Technology::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vlsir.tech.Technology)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.Technology.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .vlsir.tech.Package packages = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->packages(static_cast<int>(i)), deterministic, target);
  }

  // repeated .vlsir.tech.LayerInfo layers = 101;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, this->layers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vlsir.tech.Technology)
  return target;
}

size_t Technology::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vlsir.tech.Technology)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .vlsir.tech.Package packages = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  // repeated .vlsir.tech.LayerInfo layers = 101;
  {
    unsigned int count = static_cast<unsigned int>(this->layers_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->layers(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Technology::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vlsir.tech.Technology)
  GOOGLE_DCHECK_NE(&from, this);
  const Technology* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Technology>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vlsir.tech.Technology)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vlsir.tech.Technology)
    MergeFrom(*source);
  }
}

void Technology::MergeFrom(const Technology& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vlsir.tech.Technology)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  layers_.MergeFrom(from.layers_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Technology::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vlsir.tech.Technology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Technology::CopyFrom(const Technology& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vlsir.tech.Technology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Technology::IsInitialized() const {
  return true;
}

void Technology::Swap(Technology* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Technology::InternalSwap(Technology* other) {
  using std::swap;
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  CastToBase(&layers_)->InternalSwap(CastToBase(&other->layers_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Technology::GetMetadata() const {
  protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Package::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Package::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Package::Package()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tech_2eproto::scc_info_Package.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vlsir.tech.Package)
}
Package::Package(const Package& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:vlsir.tech.Package)
}

void Package::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Package::~Package() {
  // @@protoc_insertion_point(destructor:vlsir.tech.Package)
  SharedDtor();
}

void Package::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Package::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Package::descriptor() {
  ::protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Package& Package::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tech_2eproto::scc_info_Package.base);
  return *internal_default_instance();
}


void Package::Clear() {
// @@protoc_insertion_point(message_clear_start:vlsir.tech.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Package::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vlsir.tech.Package)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vlsir.tech.Package.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vlsir.tech.Package)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vlsir.tech.Package)
  return false;
#undef DO_
}

void Package::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vlsir.tech.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.Package.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vlsir.tech.Package)
}

::google::protobuf::uint8* Package::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vlsir.tech.Package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.Package.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vlsir.tech.Package)
  return target;
}

size_t Package::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vlsir.tech.Package)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Package::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vlsir.tech.Package)
  GOOGLE_DCHECK_NE(&from, this);
  const Package* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Package>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vlsir.tech.Package)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vlsir.tech.Package)
    MergeFrom(*source);
  }
}

void Package::MergeFrom(const Package& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vlsir.tech.Package)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Package::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vlsir.tech.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Package::CopyFrom(const Package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vlsir.tech.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Package::IsInitialized() const {
  return true;
}

void Package::Swap(Package* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Package::InternalSwap(Package* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Package::GetMetadata() const {
  protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LayerPurpose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerPurpose::kDescriptionFieldNumber;
const int LayerPurpose::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayerPurpose::LayerPurpose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tech_2eproto::scc_info_LayerPurpose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vlsir.tech.LayerPurpose)
}
LayerPurpose::LayerPurpose(const LayerPurpose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:vlsir.tech.LayerPurpose)
}

void LayerPurpose::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

LayerPurpose::~LayerPurpose() {
  // @@protoc_insertion_point(destructor:vlsir.tech.LayerPurpose)
  SharedDtor();
}

void LayerPurpose::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LayerPurpose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LayerPurpose::descriptor() {
  ::protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayerPurpose& LayerPurpose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tech_2eproto::scc_info_LayerPurpose.base);
  return *internal_default_instance();
}


void LayerPurpose::Clear() {
// @@protoc_insertion_point(message_clear_start:vlsir.tech.LayerPurpose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool LayerPurpose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vlsir.tech.LayerPurpose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vlsir.tech.LayerPurpose.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vlsir.tech.LayerPurposeType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::vlsir::tech::LayerPurposeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vlsir.tech.LayerPurpose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vlsir.tech.LayerPurpose)
  return false;
#undef DO_
}

void LayerPurpose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vlsir.tech.LayerPurpose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.LayerPurpose.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // .vlsir.tech.LayerPurposeType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vlsir.tech.LayerPurpose)
}

::google::protobuf::uint8* LayerPurpose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vlsir.tech.LayerPurpose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.LayerPurpose.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // .vlsir.tech.LayerPurposeType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vlsir.tech.LayerPurpose)
  return target;
}

size_t LayerPurpose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vlsir.tech.LayerPurpose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .vlsir.tech.LayerPurposeType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LayerPurpose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vlsir.tech.LayerPurpose)
  GOOGLE_DCHECK_NE(&from, this);
  const LayerPurpose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerPurpose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vlsir.tech.LayerPurpose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vlsir.tech.LayerPurpose)
    MergeFrom(*source);
  }
}

void LayerPurpose::MergeFrom(const LayerPurpose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vlsir.tech.LayerPurpose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void LayerPurpose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vlsir.tech.LayerPurpose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerPurpose::CopyFrom(const LayerPurpose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vlsir.tech.LayerPurpose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerPurpose::IsInitialized() const {
  return true;
}

void LayerPurpose::Swap(LayerPurpose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerPurpose::InternalSwap(LayerPurpose* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LayerPurpose::GetMetadata() const {
  protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LayerInfo::InitAsDefaultInstance() {
  ::vlsir::tech::_LayerInfo_default_instance_._instance.get_mutable()->purpose_ = const_cast< ::vlsir::tech::LayerPurpose*>(
      ::vlsir::tech::LayerPurpose::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerInfo::kNameFieldNumber;
const int LayerInfo::kPurposeFieldNumber;
const int LayerInfo::kIndexFieldNumber;
const int LayerInfo::kSubIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayerInfo::LayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tech_2eproto::scc_info_LayerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vlsir.tech.LayerInfo)
}
LayerInfo::LayerInfo(const LayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_purpose()) {
    purpose_ = new ::vlsir::tech::LayerPurpose(*from.purpose_);
  } else {
    purpose_ = NULL;
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&sub_index_) -
    reinterpret_cast<char*>(&index_)) + sizeof(sub_index_));
  // @@protoc_insertion_point(copy_constructor:vlsir.tech.LayerInfo)
}

void LayerInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&purpose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sub_index_) -
      reinterpret_cast<char*>(&purpose_)) + sizeof(sub_index_));
}

LayerInfo::~LayerInfo() {
  // @@protoc_insertion_point(destructor:vlsir.tech.LayerInfo)
  SharedDtor();
}

void LayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete purpose_;
}

void LayerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LayerInfo::descriptor() {
  ::protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayerInfo& LayerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tech_2eproto::scc_info_LayerInfo.base);
  return *internal_default_instance();
}


void LayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:vlsir.tech.LayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && purpose_ != NULL) {
    delete purpose_;
  }
  purpose_ = NULL;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sub_index_) -
      reinterpret_cast<char*>(&index_)) + sizeof(sub_index_));
  _internal_metadata_.Clear();
}

bool LayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vlsir.tech.LayerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vlsir.tech.LayerInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vlsir.tech.LayerPurpose purpose = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_purpose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 index = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sub_index = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sub_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vlsir.tech.LayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vlsir.tech.LayerInfo)
  return false;
#undef DO_
}

void LayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vlsir.tech.LayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.LayerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .vlsir.tech.LayerPurpose purpose = 11;
  if (this->has_purpose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_purpose(), output);
  }

  // uint64 index = 21;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->index(), output);
  }

  // uint64 sub_index = 31;
  if (this->sub_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->sub_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vlsir.tech.LayerInfo)
}

::google::protobuf::uint8* LayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vlsir.tech.LayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vlsir.tech.LayerInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .vlsir.tech.LayerPurpose purpose = 11;
  if (this->has_purpose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_purpose(), deterministic, target);
  }

  // uint64 index = 21;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->index(), target);
  }

  // uint64 sub_index = 31;
  if (this->sub_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->sub_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vlsir.tech.LayerInfo)
  return target;
}

size_t LayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vlsir.tech.LayerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .vlsir.tech.LayerPurpose purpose = 11;
  if (this->has_purpose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *purpose_);
  }

  // uint64 index = 21;
  if (this->index() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  // uint64 sub_index = 31;
  if (this->sub_index() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sub_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vlsir.tech.LayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vlsir.tech.LayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vlsir.tech.LayerInfo)
    MergeFrom(*source);
  }
}

void LayerInfo::MergeFrom(const LayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vlsir.tech.LayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_purpose()) {
    mutable_purpose()->::vlsir::tech::LayerPurpose::MergeFrom(from.purpose());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.sub_index() != 0) {
    set_sub_index(from.sub_index());
  }
}

void LayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vlsir.tech.LayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerInfo::CopyFrom(const LayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vlsir.tech.LayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerInfo::IsInitialized() const {
  return true;
}

void LayerInfo::Swap(LayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerInfo::InternalSwap(LayerInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(purpose_, other->purpose_);
  swap(index_, other->index_);
  swap(sub_index_, other->sub_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LayerInfo::GetMetadata() const {
  protobuf_tech_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tech_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tech
}  // namespace vlsir
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vlsir::tech::Technology* Arena::CreateMaybeMessage< ::vlsir::tech::Technology >(Arena* arena) {
  return Arena::CreateInternal< ::vlsir::tech::Technology >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vlsir::tech::Package* Arena::CreateMaybeMessage< ::vlsir::tech::Package >(Arena* arena) {
  return Arena::CreateInternal< ::vlsir::tech::Package >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vlsir::tech::LayerPurpose* Arena::CreateMaybeMessage< ::vlsir::tech::LayerPurpose >(Arena* arena) {
  return Arena::CreateInternal< ::vlsir::tech::LayerPurpose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vlsir::tech::LayerInfo* Arena::CreateMaybeMessage< ::vlsir::tech::LayerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::vlsir::tech::LayerInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
