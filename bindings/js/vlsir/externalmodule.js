/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.vlsir.circuit.ExternalModule');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.vlsir.circuit.Port');
goog.require('proto.vlsir.circuit.Signal');
goog.require('proto.vlsir.utils.Param');
goog.require('proto.vlsir.utils.QualifiedName');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vlsir.circuit.ExternalModule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vlsir.circuit.ExternalModule.repeatedFields_, null);
};
goog.inherits(proto.vlsir.circuit.ExternalModule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.vlsir.circuit.ExternalModule.displayName = 'proto.vlsir.circuit.ExternalModule';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vlsir.circuit.ExternalModule.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vlsir.circuit.ExternalModule.prototype.toObject = function(opt_includeInstance) {
  return proto.vlsir.circuit.ExternalModule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vlsir.circuit.ExternalModule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vlsir.circuit.ExternalModule.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.vlsir.utils.QualifiedName.toObject(includeInstance, f),
    desc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    portsList: jspb.Message.toObjectList(msg.getPortsList(),
    proto.vlsir.circuit.Port.toObject, includeInstance),
    signalsList: jspb.Message.toObjectList(msg.getSignalsList(),
    proto.vlsir.circuit.Signal.toObject, includeInstance),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.vlsir.utils.Param.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vlsir.circuit.ExternalModule}
 */
proto.vlsir.circuit.ExternalModule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vlsir.circuit.ExternalModule;
  return proto.vlsir.circuit.ExternalModule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vlsir.circuit.ExternalModule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vlsir.circuit.ExternalModule}
 */
proto.vlsir.circuit.ExternalModule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vlsir.utils.QualifiedName;
      reader.readMessage(value,proto.vlsir.utils.QualifiedName.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 3:
      var value = new proto.vlsir.circuit.Port;
      reader.readMessage(value,proto.vlsir.circuit.Port.deserializeBinaryFromReader);
      msg.addPorts(value);
      break;
    case 4:
      var value = new proto.vlsir.circuit.Signal;
      reader.readMessage(value,proto.vlsir.circuit.Signal.deserializeBinaryFromReader);
      msg.addSignals(value);
      break;
    case 5:
      var value = new proto.vlsir.utils.Param;
      reader.readMessage(value,proto.vlsir.utils.Param.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vlsir.circuit.ExternalModule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vlsir.circuit.ExternalModule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vlsir.circuit.ExternalModule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vlsir.circuit.ExternalModule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.vlsir.utils.QualifiedName.serializeBinaryToWriter
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPortsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.vlsir.circuit.Port.serializeBinaryToWriter
    );
  }
  f = message.getSignalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.vlsir.circuit.Signal.serializeBinaryToWriter
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.vlsir.utils.Param.serializeBinaryToWriter
    );
  }
};


/**
 * optional vlsir.utils.QualifiedName name = 1;
 * @return {?proto.vlsir.utils.QualifiedName}
 */
proto.vlsir.circuit.ExternalModule.prototype.getName = function() {
  return /** @type{?proto.vlsir.utils.QualifiedName} */ (
    jspb.Message.getWrapperField(this, proto.vlsir.utils.QualifiedName, 1));
};


/** @param {?proto.vlsir.utils.QualifiedName|undefined} value */
proto.vlsir.circuit.ExternalModule.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.vlsir.circuit.ExternalModule.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.vlsir.circuit.ExternalModule.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string desc = 2;
 * @return {string}
 */
proto.vlsir.circuit.ExternalModule.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.vlsir.circuit.ExternalModule.prototype.setDesc = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Port ports = 3;
 * @return {!Array<!proto.vlsir.circuit.Port>}
 */
proto.vlsir.circuit.ExternalModule.prototype.getPortsList = function() {
  return /** @type{!Array<!proto.vlsir.circuit.Port>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vlsir.circuit.Port, 3));
};


/** @param {!Array<!proto.vlsir.circuit.Port>} value */
proto.vlsir.circuit.ExternalModule.prototype.setPortsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.vlsir.circuit.Port=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vlsir.circuit.Port}
 */
proto.vlsir.circuit.ExternalModule.prototype.addPorts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.vlsir.circuit.Port, opt_index);
};


proto.vlsir.circuit.ExternalModule.prototype.clearPortsList = function() {
  this.setPortsList([]);
};


/**
 * repeated Signal signals = 4;
 * @return {!Array<!proto.vlsir.circuit.Signal>}
 */
proto.vlsir.circuit.ExternalModule.prototype.getSignalsList = function() {
  return /** @type{!Array<!proto.vlsir.circuit.Signal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vlsir.circuit.Signal, 4));
};


/** @param {!Array<!proto.vlsir.circuit.Signal>} value */
proto.vlsir.circuit.ExternalModule.prototype.setSignalsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.vlsir.circuit.Signal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vlsir.circuit.Signal}
 */
proto.vlsir.circuit.ExternalModule.prototype.addSignals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.vlsir.circuit.Signal, opt_index);
};


proto.vlsir.circuit.ExternalModule.prototype.clearSignalsList = function() {
  this.setSignalsList([]);
};


/**
 * repeated vlsir.utils.Param parameters = 5;
 * @return {!Array<!proto.vlsir.utils.Param>}
 */
proto.vlsir.circuit.ExternalModule.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.vlsir.utils.Param>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vlsir.utils.Param, 5));
};


/** @param {!Array<!proto.vlsir.utils.Param>} value */
proto.vlsir.circuit.ExternalModule.prototype.setParametersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.vlsir.utils.Param=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vlsir.utils.Param}
 */
proto.vlsir.circuit.ExternalModule.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.vlsir.utils.Param, opt_index);
};


proto.vlsir.circuit.ExternalModule.prototype.clearParametersList = function() {
  this.setParametersList([]);
};


